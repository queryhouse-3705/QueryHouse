CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (UPPER('static_' || c0 || '_end')) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (ABS(c0)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 >= 0 THEN c0 ELSE 0 END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (POWER(c0, SIGN(c0))) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (POWER(c0 + 1, 3) - c0) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS ('filtered_' || RTRIM(c0, '_')) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (c0 * 3) STORED);
CREATE TABLE t0 (c0 TEXT, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN NOT c0 LIKE '%[A-Z]%' THEN 1 ELSE 0 END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (ABS(c0) * (c0 % 2)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN c0 LIKE 'A%' THEN c0 ELSE 'not_' || c0 END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN SUBSTRING(c0, 1, 2) = 'ID' THEN c0 || '_verified' ELSE c0 END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS ('prefix_' || c0 || '_suffix') STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (UPPER('item_' || c0)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (SIGN(c0 - 10) * POWER(c0 + 5, 2)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 % 4 = 0 THEN c0 ELSE NULL END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (SQRT(ABS(c0))) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 % 6) + (c0 * 3)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (REPLACE(c0, 'a', 'x')) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (c0 % 9 * 3) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 * 7 + 3) % 10) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM(UPPER(c0 || '_extra'))) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (COALESCE(c0, 0) + 5) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 IS NULL THEN 0 WHEN c0 < 10 THEN c0 + 5 ELSE c0 * 10 END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (REPLACE(SUBSTRING(c0, 2, 3), 'a', 'z')) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (c0 + NULL) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM(c0) || '_trimmed') STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 * 2) + (c0 % 3)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (REPLACE(c0, 'a', 'x') || '_modified') STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM('test_' || c0)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN NOT c0 IS NULL THEN c0 || '_suffix' ELSE 'default' END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 * c0 > 100 THEN c0 ELSE c0 + 5 END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS ('prefix_' || RTRIM(c0, '_')) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (FLOOR(SQRT(c0))) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN c0 LIKE '%.%' THEN 'has_dot' ELSE 'no_dot' END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN RTRIM(c0) LIKE '%_' THEN 'underscore_end' ELSE 'no_underscore' END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN NOT c0 BETWEEN -10 AND 10 THEN c0 % 5 ELSE c0 * 3 END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN (c0 % 2 = 0) AND (c0 > 10) THEN c0 ELSE -1 END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN RTRIM(c0) LIKE '[A-Z]%' THEN 'starts_with_upper' ELSE 'not_upper' END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 < 0 THEN -1 WHEN c0 = 0 THEN 0 ELSE 1 END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 BETWEEN 1 AND 10 THEN c0 * 2 ELSE 0 END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 LIKE 'A%' THEN 1 ELSE 0 END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (c0 * (-1) * ABS(c0)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN c0 LIKE 'error%' THEN 'has_error' ELSE c0 || '_valid' END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 * 10) % 7) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (c0 + 2) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 * 3) % 11) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN c0 LIKE '%@%' THEN 'email' ELSE 'not_email' END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN c0 = 'special' THEN 'match' ELSE 'no match' END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN c0 LIKE '%error%' THEN 'has_error' ELSE 'no_error' END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM(c0, 'x') || '_trimmed') STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT, c2 TEXT GENERATED ALWAYS AS (c0 || '-' || c1 || '_suffix') STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (c0 - 2) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 + 5) % 7) STORED); INSERT INTO t0 (c0) VALUES (9);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (FLOOR(LOG(2, c0)) * 10) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 = 0 THEN c0 ELSE 0 END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 <> 0 THEN c0 ELSE 0 END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (c0 || '-suffix') STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (FLOOR(POWER(c0, 0.5)) * 10) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (ABS(c0 * -2) + SIGN(c0)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 < 0 THEN c0 ELSE 0 END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (POWER(c0 + 2, 3) - 5) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CEIL(LOG(10, c0 + 1))) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 + 10) % 7) STORED);
CREATE TABLE t0 (c0 TEXT, c1 INTEGER GENERATED ALWAYS AS (CAST(c0 AS INTEGER)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CEIL(SQRT(ABS(c0 + 1)))) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (POWER(c0, 3)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM(UPPER(c0 || '_end'))) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM('STATIC_' || c0)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CEIL(LOG(10, ABS(c0 + 1)))) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 + 5) * SIGN(c0 - 2)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 + 1) * (c0 - 1)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM('error_' || c0)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (SIGN(c0 - 50) * POWER(c0, 3)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM(LOWER('ID_' || c0))) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (ABS(c0 * 3) + (c0 % 4)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (ABS(c0 * 2) + SIGN(c0)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM('ID_' || c0)) STORED)
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 > 0 THEN c0 * 2 ELSE -c0 END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (ABS(c0) % 7 * 5) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 IS NULL THEN -1 ELSE c0 % 3 END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (c0 || ' connected') STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 * c0) % 11) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (LOWER(REPLACE(c0, 'E', '3'))) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (ABS(c0 * 5) % 7) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (LTRIM(c0) || RTRIM(c0)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 <= 0 THEN c0 ELSE 0 END) STORED)
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (SIGN(c0)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (UPPER((c0 || '_upper'))) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS ((SUBSTRING(c0, 2))) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN (c0) LIKE '%z%' THEN 'contains_z' ELSE 'no_z' END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (FLOOR(POWER(c0, 0.5) * 10)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (SUBSTRING(c0, 1, 2) || '_processed') STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (ABS((c0 % 10) - 5)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM(c0 || '_extra')) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (c0 * 2) STORED); INSERT INTO t0 (c0) VALUES (2);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM(LOWER(c0)) || '_cleaned') STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (COALESCE(c0, 0) + COALESCE(c0 + 5, 10)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (COALESCE(c0, -1)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 * c0) + (2 * c0) + 1) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (UPPER(REPLACE(c0, 'z', 'x'))) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (SUBSTRING(c0, 2, 3) || '_cut') STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (ABS(c0 - 100)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (((c0 + 5) * 3) % 8) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (((c0 * c0) - 5) % 8) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM(UPPER(c0 || '_cleaned'))) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN c0 LIKE '%_final' THEN 'ends_with_final' ELSE 'not_final' END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS ((c0 + 20) % 5) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (ABS(c0 * 3) + SIGN(c0)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (c0 + 100) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (SIGN(c0 - 10) * (c0 + 100)) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (c0 % 3) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (RTRIM(UPPER('prefix_' || c0))) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (POWER(c0 + 1, 2) - c0) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (LOG(2, c0)) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (SUBSTRING(c0, 1, 2) || '_static') STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN c0 LIKE 'A%' THEN c0 || '_match' ELSE 'no_match' END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (((c0 * c0) - 3) % 10) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (CASE WHEN c0 > 0 THEN c0 ELSE 0 END) STORED);
CREATE TABLE t0 (c0 INTEGER, c1 INTEGER GENERATED ALWAYS AS (-c0) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (CASE WHEN RTRIM(c0) LIKE '[A-Z]%' THEN 'matches_pattern' ELSE 'no_match' END) STORED);
CREATE TABLE t0 (c0 TEXT, c1 TEXT GENERATED ALWAYS AS (LOWER(c0) || UPPER(c0)) STORED);
