CREATE TABLE t0 (id INTEGER PRIMARY KEY, name TEXT); CREATE TABLE t1 (order_id INTEGER PRIMARY KEY, customer_id INTEGER, total_amount INTEGER); CREATE TABLE t2 (order_item_id INTEGER PRIMARY KEY, order_id INTEGER, product_name TEXT, quantity INTEGER, price INTEGER); INSERT INTO t0 (id, name) VALUES (1, 'Alice'), (2, 'Bob'), (3, 'Charlie'); INSERT INTO t1 (order_id, customer_id, total_amount) VALUES (101, 1, 250), (102, 2, 150), (103, 1, 300); INSERT INTO t2 (order_item_id, order_id, product_name, quantity, price) VALUES (1, 101, 'Laptop', 1, 1000), (2, 101, 'Mouse', 2, 20), (3, 102, 'Keyboard', 1, 50), (4, 103, 'Laptop', 1, 1000), (5, 103, 'Mouse', 3, 20); CREATE TEMPORARY TABLE temp_total_spent AS SELECT customer_id, SUM(total_amount) AS total_spent FROM t1 GROUP BY customer_id; CREATE TEMPORARY TABLE temp_customer_orders AS SELECT t1.customer_id, COUNT(DISTINCT t1.order_id) AS order_count, MAX(t2.quantity) AS max_quantity_ordered FROM t1 JOIN t2 ON t1.order_id = t2.order_id GROUP BY t1.customer_id; WITH summary AS (SELECT t0.id AS customer_id, t0.name, temp_total_spent.total_spent, temp_customer_orders.order_count, CASE WHEN temp_total_spent.total_spent > 500 THEN 'High Spender' WHEN temp_total_spent.total_spent BETWEEN 100 AND 500 THEN 'Medium Spender' ELSE 'Low Spender' END AS spender_category FROM t0 LEFT JOIN temp_total_spent ON t0.id = temp_total_spent.customer_id LEFT JOIN temp_customer_orders ON t0.id = temp_customer_orders.customer_id) SELECT customer_id, name, total_spent, order_count, spender_category, LAG(total_spent) OVER (PARTITION BY spender_category ORDER BY total_spent DESC) AS prev_total_spent, LEAD(total_spent) OVER (PARTITION BY spender_category ORDER BY total_spent DESC) AS next_total_spent, RANK() OVER (PARTITION BY spender_category ORDER BY total_spent DESC) AS spender_rank FROM summary ORDER BY spender_rank;