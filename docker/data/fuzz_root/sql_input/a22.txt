CREATE TABLE t0 (c0 JSON, c1 INT GENERATED ALWAYS AS (CASE WHEN CAST(c0 -> '$.value' AS INTEGER) IN (1, 2, 3) THEN 1 ELSE 0 END) VIRTUAL); INSERT INTO t0 (c0) VALUES ('{"value": 1}'), ('{"value": 2}'), ('{"value": 4}'), ('{"value": 3}'), ('{"value": 5}'); CREATE TABLE t1 (id INTEGER PRIMARY KEY, description TEXT); INSERT INTO t1 (id, description) VALUES (1, 'One'), (2, 'Two'), (3, 'Three'), (4, 'Four'), (5, 'Five'); CREATE VIEW complex_view AS SELECT t0.c0, t0.c1, t1.description, CASE WHEN t0.c1 = 1 THEN 'Low' WHEN t0.c1 = 2 THEN 'Medium' ELSE 'High' END AS c1_category, SUM(CAST(c0 -> '$.value' AS INTEGER)) OVER (ORDER BY t1.id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS running_total, LAG(CAST(c0 -> '$.value' AS INTEGER), 1, 0) OVER (ORDER BY t1.id) AS previous_value, LEAD(CAST(c0 -> '$.value' AS INTEGER), 1, 0) OVER (ORDER BY t1.id) AS next_value, RANK() OVER (ORDER BY CAST(c0 -> '$.value' AS INTEGER) DESC) AS rank_value FROM t0 JOIN t1 ON CAST(t0.c0 -> '$.value' AS INTEGER) = t1.id; SELECT c0, c1, description, c1_category, running_total, previous_value, next_value, rank_value FROM complex_view WHERE running_total > 3 ORDER BY rank_value;
