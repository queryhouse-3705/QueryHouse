CREATE TABLE t0 (id INTEGER PRIMARY KEY, name TEXT, status TEXT); CREATE TABLE t1 (customer_id INTEGER, order_total INTEGER, FOREIGN KEY (customer_id) REFERENCES t0(id)); CREATE TABLE t2 (product_id INTEGER PRIMARY KEY, category TEXT, price INTEGER); INSERT INTO t0 (id, name, status) VALUES (1, 'Alice', 'Active'), (2, 'Bob', 'Inactive'), (3, 'Charlie', 'Active'); INSERT INTO t1 (customer_id, order_total) VALUES (1, 1200), (2, 500), (3, 750); INSERT INTO t2 (product_id, category, price) VALUES (101, 'Electronics', 300), (102, 'Clothing', 50), (103, 'Furniture', 400); CREATE VIEW v0 AS SELECT t0.id AS customer_id, t0.name AS customer_name, t1.order_total, t2.category, t2.price FROM t0 JOIN t1 ON t0.id = t1.customer_id JOIN t2 ON t1.customer_id = t2.product_id WHERE t1.order_total > 500; CREATE VIEW v1 AS SELECT customer_id, customer_name, SUM(order_total) OVER (PARTITION BY category ORDER BY price DESC) AS total_order_amount, ROW_NUMBER() OVER (PARTITION BY category ORDER BY price DESC) AS row_num FROM v0; WITH RECURSIVE cte AS (SELECT customer_id, customer_name, total_order_amount, 1 AS depth FROM v1 WHERE row_num = 1 UNION ALL SELECT v1.customer_id, v1.customer_name, cte.total_order_amount + v1.total_order_amount, cte.depth + 1 FROM v1 JOIN cte ON v1.customer_id = cte.customer_id WHERE cte.depth < 5) SELECT customer_id, customer_name, total_order_amount FROM cte ORDER BY customer_id;