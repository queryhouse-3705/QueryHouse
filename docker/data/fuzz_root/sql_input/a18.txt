CREATE TABLE t0 (c0 INTEGER PRIMARY KEY, c1 TEXT, c2 DOUBLE); INSERT INTO t0 (c0, c1, c2) VALUES (1, 'Alice', 120.5), (2, 'Bob', 150.0), (3, 'Charlie', 110.75), (4, 'Diana', 175.25); WITH converted_data AS (SELECT c0, c1, CAST(c2 AS INTEGER) AS int_c2, ABS(c2) AS abs_c2, CASE WHEN c2 > 100 THEN 'High' ELSE 'Low' END AS score_category FROM t0), window_data AS (SELECT c0, c1, int_c2, abs_c2, score_category, ROW_NUMBER() OVER (ORDER BY int_c2 DESC) AS rank_desc, RANK() OVER (PARTITION BY score_category ORDER BY int_c2 DESC) AS category_rank, SUM(int_c2) OVER (PARTITION BY score_category ORDER BY c0) AS cumulative_sum, AVG(int_c2) OVER (PARTITION BY score_category ORDER BY c0) AS avg_score FROM converted_data) SELECT c0, c1, int_c2 AS original_score, abs_c2 AS absolute_score, score_category, rank_desc, category_rank, cumulative_sum, avg_score, CASE WHEN category_rank = 1 THEN 'Top Performer' ELSE 'Regular Performer' END AS performance_status FROM window_data WHERE rank_desc <= 3 ORDER BY rank_desc;