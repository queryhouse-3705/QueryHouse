SELECT c0, c1, COUNT(*) OVER () AS total_count FROM t0;
SELECT c0, c1, c2, COUNT(*) OVER (PARTITION BY c1) AS category_count FROM t0;
SELECT c0, c1, c2, COUNT(*) OVER (ORDER BY c1 ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS count_frame FROM t0;
SELECT c0, c1, c2, COUNT(*) OVER (PARTITION BY c1) AS category_count FROM t0;
SELECT c0, c1, COUNT(c1) OVER () AS non_null_count FROM t0;
SELECT c0, c1, c2, COUNT(c2) OVER (PARTITION BY c1) AS non_null_count_per_category FROM t0;
SELECT c0, c1, c2, COUNT(c2) OVER (ORDER BY c1) AS running_non_null_count FROM t0;
SELECT c0, c1, c2, COUNT(c2) OVER (ORDER BY c1 ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS count_frame_non_null FROM t0;
SELECT c0, c1, COUNT(*) FILTER(WHERE c1 > 20) OVER () AS count_filtered FROM t0;
SELECT c0, c1, c2, COUNT(*) FILTER(WHERE c2 > 20) OVER (PARTITION BY c1) AS count_filtered_per_category FROM t0;
SELECT c0, c1, c2, COUNT(*) FILTER(WHERE c2 > 20) OVER (ORDER BY c1 ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS count_filtered_frame FROM t0;
SELECT c0, c1, COUNT(c1) FILTER(WHERE c1 > 20) OVER () AS count_filtered FROM t0;
SELECT c0, c1, c2, COUNT(c2) FILTER(WHERE c2 > 20) OVER (PARTITION BY c1) AS count_filtered_per_category FROM t0;
SELECT c0, c1, c2, COUNT(c2) FILTER(WHERE c2 > 20) OVER (ORDER BY c1) AS running_count_filtered FROM t0;
SELECT c0, c1, c2, COUNT(c2) FILTER(WHERE c2 > 20) OVER (ORDER BY c1 ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS count_filtered_frame FROM t0;
SELECT department,COUNT(*) OVER(PARTITION BY department) AS count_by_department FROM employees;
SELECT COUNT(*) OVER(ORDER BY salary DESC) AS cumulative_count_by_salary FROM employees;
SELECT department,COUNT(employee_id) OVER(PARTITION BY department ORDER BY hire_date) AS count_by_department_over_time FROM employees;
SELECT COUNT(*) OVER(PARTITION BY region) AS count_by_region FROM sales;
SELECT COUNT(*) OVER(ORDER BY transaction_date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS rolling_count FROM transactions;
SELECT department,COUNT(*) OVER(PARTITION BY department RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS count_within_department FROM employees;
SELECT COUNT(*) OVER(PARTITION BY col_year ORDER BY col_month) AS cumulative_count_over_months FROM monthly_sales;
SELECT department,COUNT(project_id) OVER(PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING) AS project_count_within_department FROM projects;
SELECT COUNT(order_id) OVER(ORDER BY order_date RANGE BETWEEN 1 PRECEDING AND CURRENT ROW) AS count_last_month FROM orders;
SELECT COUNT(*) OVER(PARTITION BY category ORDER BY rating DESC) AS count_by_category_within_rating FROM reviews;